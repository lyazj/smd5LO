#!/usr/bin/env python3
#
# next - find next same-name executable resolution
#
# NOTE: The behavior is undefined when two paths in ${PATH}
# point to the same real(canonical) path.

import os
import sys

# Get executable of parent process.
if len(sys.argv) != 2:
    print('usage: %s <executable>' % os.path.basename(sys.argv[0]), file=sys.stderr)
    sys.exit(1)
program = os.path.realpath(sys.argv[1])
dirname = os.path.dirname(program)
basename = os.path.basename(program)

# Resolve the name with ${PATH}.
PATH = os.getenv('PATH').split(':')  # may be relevant and/or symbolic
index = 0  # name resolution starts here
for path_i, path in enumerate(PATH):
    if os.path.realpath(path) == dirname:
        index = path_i + 1
        break
for path in PATH[index:]:
    name = os.path.join(path, basename)
    if os.access(name, os.X_OK):
        print(name)
        sys.exit(0)
sys.exit(1)
